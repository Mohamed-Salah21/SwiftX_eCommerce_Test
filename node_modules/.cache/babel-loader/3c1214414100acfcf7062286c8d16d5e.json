{"ast":null,"code":"var _jsxFileName = \"D:\\\\web applications programming\\\\apps\\\\react.js\\\\SwiftX\\\\app\\\\src\\\\components\\\\filterButtons\\\\FilterButtons.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport ContextHook from \"../ContextHook\";\nimport { categoriesQuery } from \"../../qraphQL/ApolloClient\";\nimport \"./filterButtons.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Buttons = () => {\n  _s();\n\n  const {\n    loading,\n    data\n  } = useQuery(categoriesQuery);\n  const {\n    car\n  } = useContext(ContextHook);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"loadingHeading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this) : data.categories.map(_ref => {\n      let {\n        name\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: ` category-button ${name === categorySelected && \"selected\"}  `,\n        onClick: () => setCategorySelected(name),\n        children: name.toUpperCase()\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Buttons, \"WIYsneA6IhfpbmRvpG34o3tShH8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"names":["React","useContext","useState","useQuery","ContextHook","categoriesQuery","Buttons","loading","data","car","categories","map","name","categorySelected","setCategorySelected","toUpperCase"],"sources":["D:/web applications programming/apps/react.js/SwiftX/app/src/components/filterButtons/FilterButtons.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport ContextHook from \"../ContextHook\";\r\nimport { categoriesQuery } from \"../../qraphQL/ApolloClient\";\r\nimport \"./filterButtons.scss\";\r\nconst Buttons = () => {\r\n  const { loading, data } = useQuery(categoriesQuery);\r\n  const {car} = useContext(ContextHook);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3 className=\"loadingHeading\">Loading...</h3>\r\n      ) : (\r\n        data.categories.map(({ name }) => (\r\n          <button\r\n            className={` category-button ${name === categorySelected && \"selected\"}  `}\r\n            key={name}\r\n            onClick={() => setCategorySelected(name)}\r\n          >\r\n            {name.toUpperCase()}\r\n          </button>\r\n        ))\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Buttons;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAO,sBAAP;;;;AACA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAoBL,QAAQ,CAACE,eAAD,CAAlC;EACA,MAAM;IAACI;EAAD,IAAQR,UAAU,CAACG,WAAD,CAAxB;EACA,oBACE;IAAA,UACGG,OAAO,gBACN;MAAI,SAAS,EAAC,gBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADM,GAGNC,IAAI,CAACE,UAAL,CAAgBC,GAAhB,CAAoB;MAAA,IAAC;QAAEC;MAAF,CAAD;MAAA,oBAClB;QACE,SAAS,EAAG,oBAAmBA,IAAI,KAAKC,gBAAT,IAA6B,UAAW,IADzE;QAGE,OAAO,EAAE,MAAMC,mBAAmB,CAACF,IAAD,CAHpC;QAAA,UAKGA,IAAI,CAACG,WAAL;MALH,GAEOH,IAFP;QAAA;QAAA;QAAA;MAAA,QADkB;IAAA,CAApB;EAJJ,iBADF;AAiBD,CApBD;;GAAMN,O;UACsBH,Q;;;KADtBG,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}