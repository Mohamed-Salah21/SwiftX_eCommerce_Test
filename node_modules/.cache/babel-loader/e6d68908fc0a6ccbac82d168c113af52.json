{"ast":null,"code":"var _jsxFileName = \"D:\\\\web applications programming\\\\apps\\\\react.js\\\\SwiftX\\\\app\\\\src\\\\index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, useQuery, gql } from \"@apollo/client\"; // const client = new ApolloClient({\n//   uri: \"https://48p1r2roz4.sse.codesandbox.io\",\n//   cache: new InMemoryCache(),\n// });\n// // const EXCHANGE_RATES = gql`\n// //   query GetExchangeRates {\n// //     rates(currency: \"USD\") {\n// //        currency\n// //       rate\n// //     }\n// //   }\n// // `;\n// // 372\n// const EXCHANGE_RATES = gql`\n//   query ExChange {\n//     rates(currency: \"USD\") {\n//       rate\n//       currency\n//     }\n//   }\n// `;\n// function ExChangeRates() {\n//   const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//   console.log(data);\n//   return data.rates.map(({ currency, rate }) => (\n//     <div key={currency}>\n//       <p>\n//         {currency}: {rate}\n//       </p>\n//     </div>\n//   ));\n// }\n// function App() {\n//   return (\n//     <div>\n//       <h2>My first Apollo app ðŸš€</h2>\n//       <ExChangeRates />\n//     </div>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrender(\n/*#__PURE__*/\n// <ApolloProvider client={client}>\n_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this), // </ApolloProvider>,\ndocument.getElementById(\"root\"));","map":{"version":3,"names":["React","render","App","ApolloClient","InMemoryCache","ApolloProvider","useQuery","gql","document","getElementById"],"sources":["D:/web applications programming/apps/react.js/SwiftX/app/src/index.js"],"sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  useQuery,\n  gql,\n} from \"@apollo/client\";\n\n// const client = new ApolloClient({\n//   uri: \"https://48p1r2roz4.sse.codesandbox.io\",\n//   cache: new InMemoryCache(),\n// });\n\n// // const EXCHANGE_RATES = gql`\n// //   query GetExchangeRates {\n// //     rates(currency: \"USD\") {\n// //        currency\n// //       rate\n// //     }\n// //   }\n// // `;\n// // 372\n// const EXCHANGE_RATES = gql`\n//   query ExChange {\n//     rates(currency: \"USD\") {\n//       rate\n//       currency\n//     }\n//   }\n// `;\n\n// function ExChangeRates() {\n//   const { loading, error, data } = useQuery(EXCHANGE_RATES);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//   console.log(data);\n//   return data.rates.map(({ currency, rate }) => (\n//     <div key={currency}>\n//       <p>\n//         {currency}: {rate}\n//       </p>\n//     </div>\n//   ));\n// }\n// function App() {\n//   return (\n//     <div>\n//       <h2>My first Apollo app ðŸš€</h2>\n//       <ExChangeRates />\n//     </div>\n//   );\n// }\n\nrender(\n  // <ApolloProvider client={client}>\n  <App />,\n  // </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,EAKEC,GALF,QAMO,gBANP,C,CAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAN,MAAM;AAAA;AACJ;AACA,QAAC,GAAD;EAAA;EAAA;EAAA;AAAA,QAFI,EAGJ;AACAO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJI,CAAN"},"metadata":{},"sourceType":"module"}